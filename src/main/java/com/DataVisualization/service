package com.DataVisualization.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.DataVisualization.entity.Data;
import com.DataVisualization.repository.DataRepository;

@Service
public class DataService {

	@Autowired
	private DataRepository dataRepository;

	public List<Data> getAllData() {
		return dataRepository.findAll();
	}

	public Data getDataByEndYear(int endYear) {
	    java.util.Optional<Data> optionalData = dataRepository.findById(endYear);
	    if (optionalData.isPresent()) {
	        return optionalData.get();
	    } else {
	        return null;
	    }
	}
	public Data addData(Data data) {
		return dataRepository.save(data);
	}

	public Data updateData(int endYear, Data newData) {
		Data data = getDataByEndYear(endYear);
		data.setCity(newData.getCity());
		data.setCityLat(newData.getCityLat());
		data.setCityLng(newData.getCityLng());
		data.setCountry(newData.getCountry());
		data.setImpact(newData.getImpact());
		data.setInsight(newData.getInsight());
		data.setIntensity(newData.getIntensity());
		data.setLikelihood(newData.getLikelihood());
		data.setPestle(newData.getPestle());
		data.setPublished(newData.getPublished());
		data.setRelevance(newData.getRelevance());
		data.setRegion(newData.getRegion());
		data.setSector(newData.getSector());
		data.setSource(newData.getSource());
		data.setStartYear(newData.getStartYear());
		data.setSwot(newData.getSwot());
		data.setTopic(newData.getTopic());
		data.setUrl(newData.getUrl());
		return dataRepository.save(data);
	}

	public void deleteData(int endYear) {
		dataRepository.deleteById(endYear);
	}
}
